C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\assist\RoomAssist.java----302----departureDate == Boolean.TRUE.equals(dailyAllocationDomain.getDepartureDate())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----203----return Objects.equals(roomTypeId, roomKey.roomTypeId) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----204----Objects.equals(startDate, roomKey.startDate) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----205----Objects.equals(endDate, roomKey.endDate) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----206----Objects.equals(roomId, roomKey.roomId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\batch\BatchHandler.java----251----if (roomAllocation != null && RoomAllocationStatus.HOLD.equals(roomAllocation.getStatus()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationRepository.java----178----if (Boolean.TRUE.equals(query.getRetainAllDates())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationRepository.java----197----if (Boolean.TRUE.equals(query.getRetainAllDates())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationRepository.java----229----Boolean.TRUE.equals(domain.getDailyAllocations().get(domain.getStartDate()).getArrivalDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationRepository.java----230----Boolean.TRUE.equals(domain.getDailyAllocations().get(domain.getStartDate()).getDepartureDate()) ?
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocatedEntity.java----112----} else if (!id.equals(other.id)) return false;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----399----if (Boolean.TRUE.equals(dailyAllocation.getArrivalDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----400----!Boolean.TRUE.equals(dailyAllocation.getDepartureDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----401----!Boolean.TRUE.equals(dailyAllocation.getArrived())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----404----if (Boolean.TRUE.equals(dailyAllocation.getDepartureDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----405----Boolean.TRUE.equals(dailyAllocation.getDeparted())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----408----if (Boolean.TRUE.equals(dailyAllocation.getDepartureDate())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\HomepagePreferenceDomain.java----103----return Objects.equals(id.getTenantId(), that.id.getTenantId()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\HomepagePreferenceDomain.java----104----Objects.equals(id.getUserName(), that.id.getUserName());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\OtaInterfaceDomain.java----132----if (!booleanValue.equals(setting.getDefaultValue())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceCategoryDomain.java----92----return active == that.active && Objects.equals(id, that.id) && Objects.equals(tenantId, that.tenantId) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceCategoryDomain.java----93----Objects.equals(name, that.name) && Objects.equals(code, that.code) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceCategoryDomain.java----94----Objects.equals(description, that.description);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceDomain.java----116----return active == that.active && Objects.equals(id, that.id) && Objects.equals(tenantId, that.tenantId) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceDomain.java----117----Objects.equals(name, that.name) && Objects.equals(code, that.code) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceDomain.java----118----Objects.equals(description, that.description) && Objects.equals(categoryId, that.categoryId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ProfilePreferenceCategoryDomain.java----45----if (!super.equals(o)) return false;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ProfilePreferenceDomain.java----87----if (!super.equals(o)) return false;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ProfilePreferenceDomain.java----90----profileType == that.profileType && Objects.equals(allowables, that.allowables);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ProfilePreferenceOptionDomain.java----51----return Objects.equals(id, that.id) && Objects.equals(name, that.name);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----105----return Objects.equals(this.getId(), reservationBookingNoticeDomain.getId()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----106----Objects.equals(this.getTenantId(), reservationBookingNoticeDomain.getTenantId()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----107----Objects.equals(this.getPropertyId(), reservationBookingNoticeDomain.getPropertyId()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----108----Objects.equals(this.getMessage(), reservationBookingNoticeDomain.getMessage()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----109----Objects.equals(this.getStartDate(), reservationBookingNoticeDomain.getStartDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----110----Objects.equals(this.getEndDate(), reservationBookingNoticeDomain.getEndDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----111----Objects.equals(this.status, reservationBookingNoticeDomain.isStatus()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----112----Objects.equals(this.getOrder(), reservationBookingNoticeDomain.getOrder());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\ArrivalDateFilter.java----25----boolean isArrivalDate = Boolean.TRUE.equals(daily.getArrivalDate());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\ArrivalDateFilter.java----26----boolean isDepartureDate = Boolean.TRUE.equals(daily.getDepartureDate());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\ArrivalDateFilter.java----27----boolean isArrived = Boolean.TRUE.equals(daily.getArrived());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\DateInclusionFilter.java----22----return (Boolean.TRUE.equals(retainAllDates) || dates == null || dates.contains(date));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\DepartureDateFilter.java----22----boolean isDepartureDate = Boolean.TRUE.equals(daily.getDepartureDate());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\DepartureDateFilter.java----23----boolean isDeparted = Boolean.TRUE.equals(daily.getDeparted());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\Allocation.java----122----!Boolean.TRUE.equals(daily.getDepartureDate())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\Allocation.java----153----} else if (!ObjectUtils.equals(attributes.get(key), value)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\ReservationAllocation.java----45----if (domain.getStatus() == status && (expectedRoomId == null || roomId.equals(expectedRoomId))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\ReservationAllocation.java----162----!Boolean.TRUE.equals(entry.getValue().getDepartureDate())).map(Map.Entry::getKey).sorted()
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\ReservationAllocation.java----174----return Boolean.TRUE.equals(daily.getArrived());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\ReservationAllocation.java----187----return Boolean.TRUE.equals(daily.getDeparted());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\PropertyRoomRepository.java----201----!housekeepingRoomConditionId.equals(propertyRoom.getStatus().getHousekeepingRoomConditionId())) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\PropertyRoomRepository.java----203----!occupancyStatusId.equals(propertyRoom.getStatus().getOccupancyStatusId()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\dateroll\DateRollInvoker.java----71----if (Boolean.TRUE.equals(context.getForce()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\dateroll\DateRollInvoker.java----77----if (!Boolean.TRUE.equals(context.getForce())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\RepairedEventHandler.java----36----event.getArrived() != null ? Boolean.TRUE.equals(event.getArrived()) : allocation.isArrived();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\RepairedEventHandler.java----38----event.getDeparted() != null ? Boolean.TRUE.equals(event.getDeparted()) : allocation.isDeparted();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventHandler.java----85----return (Boolean.TRUE.equals(target.getDailyAllocations().get(target.getStartDate()).getArrived()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventHandler.java----89----return (Boolean.TRUE.equals(target.getDailyAllocations().get(target.getEndDate()).getDeparted()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventHandler.java----115----(Boolean.TRUE.equals(allocation.getDepartureDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventListener.java----93----if (ObjectUtils.equals(event.getDepartureDate(), event.getPropertyDate())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventListener.java----95----} else if (ObjectUtils.equals(event.getOldDepartureDate(), event.getPropertyDate())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventProducer.java----95----if (!newRoomTypeId.equals(oldRoomTypeId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventProducer.java----164----if (!repairTransientDates.equals(currentTransientDates)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\jobs\AllocationRebuildJobStrategy.java----43----.findByEventTypes((!tenantId.equals(ALL_TENANTS) ? tenantId : null),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\recovery\ReservationAllocationResolver.java----166----} else if (allowed.equals(allocation.isArrived())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\recovery\ReservationAllocationResolver.java----188----} else if (allowed.equals(allocation.isDeparted())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\recovery\ReservationAllocationResolver.java----212----return Stream.of(allowed).map(CanonicalId::getId).anyMatch(id -> id.equals(status));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\context\RoomSelectionContext.java----119----if (!otherAssociatedId.equals(associatedId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\context\RoomSelectionRequest.java----314----includeCurrent = Boolean.TRUE.equals(params.getIncludeCurrent());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\context\RoomSelectionRequest.java----338----includeUnavailable = Boolean.TRUE.equals(params.getUnavailable());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\context\RoomSelectionRequest.java----339----verbose = Boolean.TRUE.equals(params.getVerbose());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AnimalTypeHandler.java----147----if (id.equals(petSettings.getPerReservationChargeId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AnimalTypeHandler.java----152----.filter(animalTypes -> StringUtils.equals(animalTypes.getChargeId(), id)).findFirst();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----130----if (Boolean.TRUE.equals(request.getIncludeOverallAvailability())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----149----if (params != null && Boolean.TRUE.equals(params.isLocalOnly())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----232----if (params != null && Boolean.TRUE.equals(params.isLocalOnly())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----366----if (BatchRoomStatusType.CANCELLED.equals(batchRooms.getBatchRoomStatusType())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----427----if (creditCardAuthRuleSettingsId.equals(existingCreditCardAuthRuleSettingsId) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----533----if (DEFAULT_CREDIT_CARD_AUTH_RULE_SETTINGS_ID.equals(creditCardAuthRuleSettingsId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\lostandfound\LostAndFoundBaseCommandHandler.java----162----if ((newValue == oldValue) || (newValue != null && oldValue != null && oldValue.equals(newValue))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----137----if (params != null && (Boolean.TRUE.equals(params.getFederatedRatesEnabled()) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----138----Boolean.TRUE.equals(params.getCompCertificateEnabled()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----159----if (params != null && (Boolean.TRUE.equals(params.getFederatedRatesEnabled()) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----160----Boolean.TRUE.equals(params.getCompCertificateEnabled()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----163----(Boolean.TRUE.equals(params.getFederatedRatesEnabled()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----165----Boolean.TRUE.equals(otaInterface
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----167----(Boolean.TRUE.equals(params.getCompCertificateEnabled()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----169----Boolean.TRUE.equals(otaInterface
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyDateHandler.java----391----if (null != autoCloseDateSetting && Boolean.class.equals(autoCloseDateSetting.getTypeClass()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyHandler.java----355----if (accountId.equals(pantrySetting.getAssociatedHouseAccountId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----199----if (Boolean.TRUE.equals(dailyAllocation.getDepartureDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----309----if ((departureDate.isAfter(date) && arrivalDate.isBefore(date)) || departureDate.equals(date) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----310----arrivalDate.equals(date)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----320----departureDate.equals(date) || dailyAllocation.getDepartureDate() != null &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----321----dailyAllocation.getDepartureDate() && arrivalDate.equals(date)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----96----if (clazz.equals(CandidateRoom.class)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----98----} else if (clazz.equals(PropertyRoom.class)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----230----room.setIsADA(Boolean.TRUE.equals(context.getConfiguration().getIsADA()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----640----return Boolean.TRUE.equals(petAllowed) ? petAllowed : roomType != null && roomType.isPets();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----645----(getConfiguration() != null && Boolean.TRUE.equals(getConfiguration().getIsADA()))) : isAdaAggregate);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----362----if (!originalRoomNumber.equals(updatedRoomNumber)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----436----if (building.equals(room.getConfiguration().getBuildingId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----496----if (building.equals(room.getConfiguration().getBuildingId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----622----if (!currentId.equals(previousId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----163----if (!ObjectUtils.equals(roomId, currentRoomId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----231----if (Boolean.TRUE.equals(propertyRoom.getConfiguration().getIsADA())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----500----if (Boolean.TRUE.equals(daily.getDepartureDate()) && !startDate.equals(date)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\EventingManager.java----161----if (!DIRECT_CLOSED.equals(triple.field.toString())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\EventingManager.java----326----} else if (PROFILE_ID.equals(field)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\EventingManager.java----328----} else if (AREA_ID.equals(field)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\FoundItemManager.java----210----if (!matchId.equals(id)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\FoundItemManager.java----404----if (!claimId.equals(matchId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----357----if (LOST_STATUS.equals(initialStatus)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----360----} else if (FOUND_UNCLAIMED_STATUS.equals(initialStatus)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----406----if (Boolean.TRUE.equals(params.getIncludeComments())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----455----if (FOUND_UNCLAIMED_STATUS.equals(itemStatusCountId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----458----if (FOUND_CLAIMED_STATUS.equals(itemStatusCountId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----816----if (!FOUND_UNCLAIMED_STATUS.equals(summaryInfo.getInitialStatus())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----930----if (LOST_STATUS.equals(summaryInfo.getInitialStatus()) || !storageLocationRequire) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----944----if (FOUND_UNCLAIMED_STATUS.equals(summaryInfo.getInitialStatus())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----991----if (null != areaId && GENERAL_AREA.equals(areaId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\PropertyBootstrapRunner.java----107----if(!existingItem.equals(defaultPropertySetting)){
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\PropertyBootstrapRunner.java----117----return existingItems.stream().filter(existing -> Objects.equals(existing.getIdentifier(), item.getIdentifier()))
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----193----if (!currentRoomTypeId.equals(newRoomTypeId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----196----currentRoomTypeId.equals(assist.getVirtualRoomTypeIdByPhysicalRoomTypeId().get(newRoomTypeId))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AllocationValidator.java----94----if (!Objects.equals(value, expectedValue)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AllocationValidator.java----125----if (ObjectUtils.equals(value, unexpectedValue)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AnimalTypeValidator.java----20----if (animalTypes.equals(existing) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AnimalTypeValidator.java----32----if (!AnimalTypes.SERVICE_ANIMAL_ID.equals(animalTypes.getId()) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AnimalTypeValidator.java----34----!AnimalTypes.SERVICE_ANIMAL.equals(animalTypes.getAnimal())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AssociationValidator.java----27----if (Boolean.TRUE.equals(daily.getDepartureDate()) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\CancellationPolicyValidator.java----47----(policy.getMatchDepositPolicy() == null || Boolean.FALSE.equals(policy.getMatchDepositPolicy()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\CancellationPolicyValidator.java----52----(policy.getFlatFee() != null && Boolean.TRUE.equals(policy.getMatchDepositPolicy())) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\CancellationPolicyValidator.java----53----(policy.getNights() != null && Boolean.TRUE.equals(policy.getMatchDepositPolicy()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\InventoryBlockValidator.java----15----if (!roomId.equals(result.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\LostAndFoundBaseValidator.java----108----if (!id.equals(reqObjectId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\LostAndFoundBaseValidator.java----111----if (!propertyId.equals(reqPropertyId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\LostAndFoundBaseValidator.java----114----if (!tenantId.equals(reqTenantId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ProfilePreferenceCategoryValidator.java----36----if ((existingCategory == null || !Objects.equals(existingCategory.getCode(), category.getCode())) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ProfilePreferenceValidator.java----39----if ((existingPreference == null || !Objects.equals(preference.getCode(), existingPreference.getCode())) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReferenceValidator.java----67----if (!uriId.equals(model.getId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReferenceValidator.java----75----if (!uriTenantId.equals(itemTenantId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReferenceValidator.java----83----if (!uriPropertyId.equals(itemPropertyId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----181----if (Boolean.TRUE.equals(repair.getArrived())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----185----if (Boolean.TRUE.equals(repair.getDeparted())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----200----if (arrivalDate.equals(departureDate)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationBookingNoticeValidator.java----71----if (!id.equals(reservationBookingNotice.getId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----688----reservationAllocationManager.convertGroupDatesToTransientDates(assist, groupAllocationId, transientDates),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AllocatedRoomsBuilder.java----152----roomDetail.setExternelReferenceId(entity.getExternelReferenceId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AllocatedRoomsBuilder.java----171----entity.setExternelReferenceId(entry.getKey().getId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----147----ReservationAllocation interim = reservationAllocationManager.createHold(assist, hold, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1596----return roomHandler.getRoomModelFromBuilding(roomAssist(tenantId, propertyId), request.getBuildingIds(), startDate, endDate,
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\BuildingHandler.java----56----return super.update(assist, id, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----151----roomTypeHandler.update(propertyWriterAssist, associatedRoomTypes);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----167----buildingHandler.update(propertyWriterAssist, associatedBuildings);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----238----creditCardAuthRuleSettingsRepository.update(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----261----creditCardAuthRuleSettingsRepository.update(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----578----creditCardAuthRuleSettingsRepository.update(existingCreditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----588----creditCardAuthRuleSettingsRepository.update(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\GroupAllocationHandler.java----60----GroupAllocation interim = manager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockAllocationHandler.java----56----InventoryBlockAllocation interim = manager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\MealPeriodHandler.java----35----return super.update(assist, id, document);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----118----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----128----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OutletHandler.java----75----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyHandler.java----133----return update(assist, assist.updateProperty(new PmsProperty(property)).toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----256----ReservationAllocation interim = reservationAllocationManager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomTypeHandler.java----74----return super.update(assist, id, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----287----return propertyHandler.update(propertyWriter(tenantId, propertyId), property);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----382----return bedHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.BED), id, bed);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----411----return buildingHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.BUILDING), id, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----819----return outletHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.OUTLET), id, outlet);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1021----return roomClassHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_CLASS), id, roomClass);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1193----return roomTypeHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_TYPE), id, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1234----return vipStatusHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.VIP_STATUS), id, vipStatus);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\assist\RoomAssist.java----211----physicalRoomTypeIdsByVirtualRoomTypeId = HashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\AvailabilityMatrix.java----22----private final Table<LineItemId, LocalDate, BigDecimal> byDate = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\GroupMatrix.java----29----table = TreeBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----26----Table<String, LocalDate, Integer> table = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----27----Table<String, LocalDate, Integer> nonBeddedtable = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----54----.computeIfAbsent(buildingEntry.getKey(), s -> HashBasedTable.create()) : null;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----58----tableByBuilding.computeIfAbsent(buildingEntry.getKey(), s -> HashBasedTable.create()) :
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\config\PropertyConfigContext.java----333----return jaxrsServerFactoryBean.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationCriteriaBuilder.java----158----Multimap<ExternalReferenceType, String> byReferenceType = LinkedHashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\PropertyRoomRepository.java----146----Multimap<String, RoomStatusUpdateMote<?>> updatesByRoom = LinkedHashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----423----BatchRoomsDomain createdBatchRoomsDomain = batchRoomsRepository.create(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----447----BatchRoomsDomain createdBatchRoomsDomain = batchRoomsRepository.create(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\BuildingHandler.java----38----Building createdBuilding = super.create(assist, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CancellationPolicyHandler.java----66----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----124----creditCardAuthRuleSettingsRepository.create(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\GroupAllocationHandler.java----30----GroupAllocation interim = manager.create(assist, origin, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockAllocationHandler.java----30----InventoryBlockAllocation interim = manager.create(assist, origin, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\MealPeriodHandler.java----28----return super.create(assist, document);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----106----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----112----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OutletHandler.java----49----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomTypeHandler.java----56----RoomType createdRoomType = super.create(assist, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----81----private Multimap<String, PropertyRoom> roomMap = LinkedListMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----82----private Multimap<String, TapeChartAllocation<?>> allocationMap = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----139----Multimap<String, TapeChartAllocation<TapeChartReservation>> map = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----184----Multimap<String, TapeChartAllocation<TapeChartInventoryBlock>> map = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----336----HashBasedTable<LocalDate, String, AtomicInteger> deficiency = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----459----HashBasedTable<LocalDate, String, Map<String, RoomAllocationDomain>> table = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----367----return bedHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.BED), bed);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----396----return buildingHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.BUILDING), building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----683----return mealPeriodHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.MEAL_PERIOD), mealPeriod);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----804----return outletHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.OUTLET), outlet);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1006----return roomClassHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_CLASS), roomClass);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1035----return roomFeatureHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_FEATURE), roomFeature);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1173----return roomTypeHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_TYPE), roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1213----return vipStatusHandler.create(propertyWriter(tenantId, propertyId), vipStatus);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1399----return lostItemHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.LOST_ITEMS), lostItem);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyHandler.java----367----return assist.updateFeatureSettings(assist.getTenantId(), assist.getPropertyId(), featureSettings).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1647----return propertyHandler.updateFeatureSettings(propertyWriter(tenantId, propertyId), featureSettings);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\assist\RoomAssist.java----211----physicalRoomTypeIdsByVirtualRoomTypeId = HashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\AvailabilityMatrix.java----22----private final Table<LineItemId, LocalDate, BigDecimal> byDate = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\GroupMatrix.java----29----table = TreeBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----26----Table<String, LocalDate, Integer> table = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----27----Table<String, LocalDate, Integer> nonBeddedtable = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----54----.computeIfAbsent(buildingEntry.getKey(), s -> HashBasedTable.create()) : null;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----58----tableByBuilding.computeIfAbsent(buildingEntry.getKey(), s -> HashBasedTable.create()) :
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\config\PropertyConfigContext.java----333----return jaxrsServerFactoryBean.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationCriteriaBuilder.java----158----Multimap<ExternalReferenceType, String> byReferenceType = LinkedHashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\PropertyRoomRepository.java----146----Multimap<String, RoomStatusUpdateMote<?>> updatesByRoom = LinkedHashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----423----BatchRoomsDomain createdBatchRoomsDomain = batchRoomsRepository.create(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----447----BatchRoomsDomain createdBatchRoomsDomain = batchRoomsRepository.create(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\BuildingHandler.java----38----Building createdBuilding = super.create(assist, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CancellationPolicyHandler.java----66----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----124----creditCardAuthRuleSettingsRepository.create(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\GroupAllocationHandler.java----30----GroupAllocation interim = manager.create(assist, origin, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockAllocationHandler.java----30----InventoryBlockAllocation interim = manager.create(assist, origin, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\MealPeriodHandler.java----28----return super.create(assist, document);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----106----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----112----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OutletHandler.java----49----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomTypeHandler.java----56----RoomType createdRoomType = super.create(assist, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----81----private Multimap<String, PropertyRoom> roomMap = LinkedListMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----82----private Multimap<String, TapeChartAllocation<?>> allocationMap = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----139----Multimap<String, TapeChartAllocation<TapeChartReservation>> map = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----184----Multimap<String, TapeChartAllocation<TapeChartInventoryBlock>> map = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----336----HashBasedTable<LocalDate, String, AtomicInteger> deficiency = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----459----HashBasedTable<LocalDate, String, Map<String, RoomAllocationDomain>> table = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----367----return bedHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.BED), bed);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----396----return buildingHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.BUILDING), building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----683----return mealPeriodHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.MEAL_PERIOD), mealPeriod);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----804----return outletHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.OUTLET), outlet);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1006----return roomClassHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_CLASS), roomClass);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1035----return roomFeatureHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_FEATURE), roomFeature);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1173----return roomTypeHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_TYPE), roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1213----return vipStatusHandler.create(propertyWriter(tenantId, propertyId), vipStatus);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1399----return lostItemHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.LOST_ITEMS), lostItem);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\BuildingHandler.java----56----return super.update(assist, id, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----151----roomTypeHandler.update(propertyWriterAssist, associatedRoomTypes);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----167----buildingHandler.update(propertyWriterAssist, associatedBuildings);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----238----creditCardAuthRuleSettingsRepository.update(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----261----creditCardAuthRuleSettingsRepository.update(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----578----creditCardAuthRuleSettingsRepository.update(existingCreditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----588----creditCardAuthRuleSettingsRepository.update(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\GroupAllocationHandler.java----60----GroupAllocation interim = manager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockAllocationHandler.java----56----InventoryBlockAllocation interim = manager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\MealPeriodHandler.java----35----return super.update(assist, id, document);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----118----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----128----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OutletHandler.java----75----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyHandler.java----133----return update(assist, assist.updateProperty(new PmsProperty(property)).toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----256----ReservationAllocation interim = reservationAllocationManager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomTypeHandler.java----74----return super.update(assist, id, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----287----return propertyHandler.update(propertyWriter(tenantId, propertyId), property);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----382----return bedHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.BED), id, bed);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----411----return buildingHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.BUILDING), id, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----819----return outletHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.OUTLET), id, outlet);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1021----return roomClassHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_CLASS), id, roomClass);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1193----return roomTypeHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_TYPE), id, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1234----return vipStatusHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.VIP_STATUS), id, vipStatus);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----616----roomHandler.findRoomsForProperty(roomAssist(tenantId, propertyId), startDate, endDate, request);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\assist\RoomAssist.java----211----physicalRoomTypeIdsByVirtualRoomTypeId = HashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\AvailabilityMatrix.java----22----private final Table<LineItemId, LocalDate, BigDecimal> byDate = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\GroupMatrix.java----29----table = TreeBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----26----Table<String, LocalDate, Integer> table = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----27----Table<String, LocalDate, Integer> nonBeddedtable = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----54----.computeIfAbsent(buildingEntry.getKey(), s -> HashBasedTable.create()) : null;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----58----tableByBuilding.computeIfAbsent(buildingEntry.getKey(), s -> HashBasedTable.create()) :
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\config\PropertyConfigContext.java----333----return jaxrsServerFactoryBean.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationCriteriaBuilder.java----158----Multimap<ExternalReferenceType, String> byReferenceType = LinkedHashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\PropertyRoomRepository.java----146----Multimap<String, RoomStatusUpdateMote<?>> updatesByRoom = LinkedHashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----423----BatchRoomsDomain createdBatchRoomsDomain = batchRoomsRepository.create(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----447----BatchRoomsDomain createdBatchRoomsDomain = batchRoomsRepository.create(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\BuildingHandler.java----38----Building createdBuilding = super.create(assist, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CancellationPolicyHandler.java----66----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----124----creditCardAuthRuleSettingsRepository.create(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\GroupAllocationHandler.java----30----GroupAllocation interim = manager.create(assist, origin, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockAllocationHandler.java----30----InventoryBlockAllocation interim = manager.create(assist, origin, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\MealPeriodHandler.java----28----return super.create(assist, document);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----106----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----112----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OutletHandler.java----49----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomTypeHandler.java----56----RoomType createdRoomType = super.create(assist, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----81----private Multimap<String, PropertyRoom> roomMap = LinkedListMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----82----private Multimap<String, TapeChartAllocation<?>> allocationMap = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----139----Multimap<String, TapeChartAllocation<TapeChartReservation>> map = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----184----Multimap<String, TapeChartAllocation<TapeChartInventoryBlock>> map = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----336----HashBasedTable<LocalDate, String, AtomicInteger> deficiency = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----459----HashBasedTable<LocalDate, String, Map<String, RoomAllocationDomain>> table = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----367----return bedHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.BED), bed);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----396----return buildingHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.BUILDING), building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----683----return mealPeriodHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.MEAL_PERIOD), mealPeriod);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----804----return outletHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.OUTLET), outlet);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1006----return roomClassHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_CLASS), roomClass);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1035----return roomFeatureHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_FEATURE), roomFeature);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1173----return roomTypeHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_TYPE), roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1213----return vipStatusHandler.create(propertyWriter(tenantId, propertyId), vipStatus);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1399----return lostItemHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.LOST_ITEMS), lostItem);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\RoomTypeDomain.java----82----defaultBuildingId = roomType.getDefaultBuildingId();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomMoveReasonHandler.java----27----roomMoveReasonRepository.getRoomMoveReasons(tenantId, propertyId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1603----return roomMoveReasonHandler.getRoomMoveReasons(tenantId, propertyId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AllocationByTypeFilteringOperation.java----221----ImmutableTable<LocalDate, String, AtomicInteger> table = tableBuilder.build();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\AllocationCountOperation.java----57----Map<String, AvailabilityMatrix> buildingMatrix = context.getAvailabilityMatrixByBuilding();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\CalculateOperation.java----21----context.getAvailabilityMatrixByBuilding().forEach((buildingId, matrix) -> performOp(matrix, context));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----85----context.getAvailabilityMatrixByBuilding().forEach((buildingId, matrix) -> {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AllocatedRoomsBuilder.java----151----if (entity.getExternelReferenceId() != null) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AllocatedRoomsBuilder.java----152----roomDetail.setExternelReferenceId(entity.getExternelReferenceId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AllocatedRoomsBuilder.java----178----allocatedRooms.computeIfAbsent(allocatedRoomDetail.getExternelReferenceId(), s -> new ArrayList<>());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----147----ReservationAllocation interim = reservationAllocationManager.createHold(assist, hold, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----364----return reservationAllocationManager.renew(assist, ident, overbook)
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyHandler.java----367----return assist.updateFeatureSettings(assist.getTenantId(), assist.getPropertyId(), featureSettings).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1647----return propertyHandler.updateFeatureSettings(propertyWriter(tenantId, propertyId), featureSettings);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\AllocationCountOperation.java----160----StringUtils.isEmpty(buildingEntry) ? roomType.getDefaultOrUnassigned() : buildingEntry.getKey();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----594----new RoomAndBuildingDetail(null, null, roomTypeId, roomType.getDefaultOrUnassigned());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----625----roomTypeDefaultBuildingMap.put(roomType.getId(), roomType.getDefaultOrUnassigned());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\BuildingHandler.java----56----return super.update(assist, id, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----151----roomTypeHandler.update(propertyWriterAssist, associatedRoomTypes);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----167----buildingHandler.update(propertyWriterAssist, associatedBuildings);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----238----creditCardAuthRuleSettingsRepository.update(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----261----creditCardAuthRuleSettingsRepository.update(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----578----creditCardAuthRuleSettingsRepository.update(existingCreditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----588----creditCardAuthRuleSettingsRepository.update(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\GroupAllocationHandler.java----60----GroupAllocation interim = manager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockAllocationHandler.java----56----InventoryBlockAllocation interim = manager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\MealPeriodHandler.java----35----return super.update(assist, id, document);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----118----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----128----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OutletHandler.java----75----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyHandler.java----133----return update(assist, assist.updateProperty(new PmsProperty(property)).toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----256----ReservationAllocation interim = reservationAllocationManager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomTypeHandler.java----74----return super.update(assist, id, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----287----return propertyHandler.update(propertyWriter(tenantId, propertyId), property);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----382----return bedHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.BED), id, bed);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----411----return buildingHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.BUILDING), id, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----819----return outletHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.OUTLET), id, outlet);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1021----return roomClassHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_CLASS), id, roomClass);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1193----return roomTypeHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_TYPE), id, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1234----return vipStatusHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.VIP_STATUS), id, vipStatus);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----262----reservationAllocationManager.updateRoomType(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----268----reservationAllocationManager.updateRoom(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----85----ReservationAllocation interim = manager.updateRoom(context, ident, update, Boolean.FALSE);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----105----return manager.updateRoom(context, ident, update, Boolean.FALSE);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyHandler.java----367----return assist.updateFeatureSettings(assist.getTenantId(), assist.getPropertyId(), featureSettings).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1647----return propertyHandler.updateFeatureSettings(propertyWriter(tenantId, propertyId), featureSettings);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----904----List<RoomDTO> list = propertyManagement.findRooms(tenantId, propertyId, roomOptionalParams);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\assist\RoomAssist.java----211----physicalRoomTypeIdsByVirtualRoomTypeId = HashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\AvailabilityMatrix.java----22----private final Table<LineItemId, LocalDate, BigDecimal> byDate = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\GroupMatrix.java----29----table = TreeBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----26----Table<String, LocalDate, Integer> table = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----27----Table<String, LocalDate, Integer> nonBeddedtable = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----54----.computeIfAbsent(buildingEntry.getKey(), s -> HashBasedTable.create()) : null;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----58----tableByBuilding.computeIfAbsent(buildingEntry.getKey(), s -> HashBasedTable.create()) :
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\config\PropertyConfigContext.java----333----return jaxrsServerFactoryBean.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationCriteriaBuilder.java----158----Multimap<ExternalReferenceType, String> byReferenceType = LinkedHashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\PropertyRoomRepository.java----146----Multimap<String, RoomStatusUpdateMote<?>> updatesByRoom = LinkedHashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----423----BatchRoomsDomain createdBatchRoomsDomain = batchRoomsRepository.create(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----447----BatchRoomsDomain createdBatchRoomsDomain = batchRoomsRepository.create(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\BuildingHandler.java----38----Building createdBuilding = super.create(assist, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CancellationPolicyHandler.java----66----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----124----creditCardAuthRuleSettingsRepository.create(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\GroupAllocationHandler.java----30----GroupAllocation interim = manager.create(assist, origin, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockAllocationHandler.java----30----InventoryBlockAllocation interim = manager.create(assist, origin, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\MealPeriodHandler.java----28----return super.create(assist, document);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----106----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----112----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OutletHandler.java----49----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomTypeHandler.java----56----RoomType createdRoomType = super.create(assist, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----81----private Multimap<String, PropertyRoom> roomMap = LinkedListMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----82----private Multimap<String, TapeChartAllocation<?>> allocationMap = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----139----Multimap<String, TapeChartAllocation<TapeChartReservation>> map = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----184----Multimap<String, TapeChartAllocation<TapeChartInventoryBlock>> map = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----336----HashBasedTable<LocalDate, String, AtomicInteger> deficiency = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----459----HashBasedTable<LocalDate, String, Map<String, RoomAllocationDomain>> table = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----367----return bedHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.BED), bed);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----396----return buildingHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.BUILDING), building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----683----return mealPeriodHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.MEAL_PERIOD), mealPeriod);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----804----return outletHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.OUTLET), outlet);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1006----return roomClassHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_CLASS), roomClass);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1035----return roomFeatureHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_FEATURE), roomFeature);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1173----return roomTypeHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_TYPE), roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1213----return vipStatusHandler.create(propertyWriter(tenantId, propertyId), vipStatus);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1399----return lostItemHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.LOST_ITEMS), lostItem);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationRepository.java----278----dbAllocation.setAvailability(AllocationDomain.extractAvailability(dbAllocation));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\AllocationEventHandler.java----63----target.setAvailability(AllocationDomain.extractAvailability(target));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\AllocationCountOperation.java----53----if (context.isIncludeNonBeddedRoomType() && isNBR) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\AllocationCountOperation.java----61----if (context.isIncludeNonBeddedRoomType() && isNBR) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\AllocationCountOperation.java----70----if (!context.isIncludeNonBeddedRoomType() && isNBR) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\CalculateOperation.java----22----if (context.isIncludeNonBeddedRoomType() && null != context.getNonBeddedAvailabilityMatrixByBuilding()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\CalculateOperation.java----28----if (context.isIncludeNonBeddedRoomType() && null != context.getNonBeddedAvailabilityMatrix()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----51----if (context.isIncludeNonBeddedRoomType() && isNBR) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----67----if (context.isIncludeNonBeddedRoomType() && isNBR) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----92----if (context.isIncludeNonBeddedRoomType() && null != context.getNonBeddedAvailabilityMatrixByBuilding()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----111----if (context.isIncludeNonBeddedRoomType() && nonBeddedMatrix != null) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----128----if (!context.isIncludeNonBeddedRoomType() && nonBeddedRoomTypeIds != null &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----221----request.isIncludeNonBeddedRoomType());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----231----request.isIncludeNonBeddedRoomType());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----239----context.getEndDate(), request.isIncludeNonBeddedRoomType()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----422----if (!generalAvailabilityRequest.isIncludeNonBeddedRoomType()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----463----if (!request.isIncludeNonBeddedRoomType() && roomType.isNonBedded()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1597----request.isIncludeNonBeddedRoomType());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AllocationByTypeFilteringOperation.java----221----ImmutableTable<LocalDate, String, AtomicInteger> table = tableBuilder.build();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\AllocationCountOperation.java----157----Map.Entry<String, Set<String>> buildingEntry = context.getRoomIdsByBuildingId().entrySet().stream()
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----143----for (Entry<String, Set<String>> stringSetEntry : context.getRoomIdsByBuildingId().entrySet()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----268----reservationAllocationManager.updateRoom(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----85----ReservationAllocation interim = manager.updateRoom(context, ident, update, Boolean.FALSE);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----105----return manager.updateRoom(context, ident, update, Boolean.FALSE);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----262----reservationAllocationManager.updateRoomType(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----688----reservationAllocationManager.convertGroupDatesToTransientDates(assist, groupAllocationId, transientDates),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----708----allocatedRoomsBuilder.getAllocatedRooms(assist, requestDate(assist, interim), entities);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyAvailabilityImplementation.java----204----return allocatedRoomsHandler.getAllocatedRooms(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyAvailabilityImplementation.java----224----return availabilityHandler.getGeneralAvailability(roomAssist(tenantId, propertyId), startDate, endDate, params);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----364----return reservationAllocationManager.renew(assist, ident, overbook)
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyHandler.java----367----return assist.updateFeatureSettings(assist.getTenantId(), assist.getPropertyId(), featureSettings).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1647----return propertyHandler.updateFeatureSettings(propertyWriter(tenantId, propertyId), featureSettings);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AvailabilityManager.java----53----context.setIncludeNonBeddedRoomType(includeNonBeddedRoomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AvailabilityManager.java----87----context.setIncludeNonBeddedRoomType(includeNonBeddedRoomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\batch\BatchHandler.java----157----jobDetail.setRoomId(roomId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\batch\BatchHandler.java----168----jobDetail.setRoomId(request.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\lostAndFound\LocationDetailsDomain.java----80----locationDetails.setRoomId(roomId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PropertyRoomStatus.java----62----roomStatus.setRoomId(id);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\InventoryBlockAllocation.java----92----model.setRoomId((String) attributes.get(ROOM_ID));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\ReservationAllocation.java----257----model.setRoomId((String) attributes.get(ROOM_ID));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\messaging\RoomConfigurationChangedPublisher.java----49----message.setRoomId(roomId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----297----request.setRoomId(roomId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockHandler.java----78----inventoryBlock.setRoomId(room);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----346----roomUpdate.setRoomId(update.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationReportHelper.java----127----reservationAllocationReportValue.setRoomId(roomId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----247----room.setRoomId(context.getId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----262----room.setRoomId(!context.isPhantom() ? context.getId() : null);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----528----roomStatus.setRoomId(areaId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomOccupancyStatusHandler.java----134----result.setRoomId(roomId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomReportBuilder.java----70----value.setRoomId(room.getId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----82----update.setRoomId(candidates.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----103----update.setRoomId(renewAllocationRequest.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\CandidateAssemblyOperation.java----206----candidateRoom.setRoomId(propertyRoom.getId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\recovery\ReservationAllocationResolver.java----104----allocationManager.repair(assist, identifier(allocation), repair);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----370----return reservationAllocationManager.repair(assist, ident, repair)
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\audit\model\InventoryBlockAuditModel.java----60----room = allocation.getRoomId(propertyDate);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\audit\model\ReservationAllocationAuditModel.java----62----room = allocation.getRoomId(propertyDate);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----144----if (stringSetEntry.getValue().contains(roomKey.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\batch\BatchHandler.java----168----jobDetail.setRoomId(request.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\batch\BatchReleaseRoomConsumer.java----33----batchRoomJobDetail.getAllocationId(), batchRoomJobDetail.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\batch\BatchRenewConsumer.java----27----batchRoomJobDetail.getAllocationId(), batchRoomJobDetail.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\HousekeepingSectionDomain.java----66----domain.getRoomIds().add(room.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\lostAndFound\LocationDetailsDomain.java----29----roomId = locationDetails.getRoomId();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\lostAndFound\LocationDetailsDomain.java----34----{ ROOM_NUMBER, L.roomId, R.getRoomId() },
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PropertyRoomStatistics.java----19----super(room.getRoomId(), room.getTenantId(), room.getPropertyId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PropertyRoomStatus.java----22----super(roomStatus.getRoomId(), roomStatus.getTenantId(), roomStatus.getPropertyName());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\PropertyRoomRepository.java----148----updatesByRoom.put(statusUpdate.getRoomId(), statusUpdate);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\inventoryblock\CreatedEventHandler.java----46----if (event.getRoomTypeId() != null && event.getRoomId() != null) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\inventoryblock\CreatedEventHandler.java----53----roomType.getRoomAllocations().put(event.getRoomId(), room);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\inventoryblock\InventoryBlockEventProducer.java----21----event.roomId(origin.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\inventoryblock\InventoryBlockEventProducer.java----22----event.roomTypeId(context.getPropertyAreaMap().get(origin.getRoomId()).getConfiguration().getRoomTypeId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventListener.java----68----String currentRoomId = allocation.getRoomId(propertyDate);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventListener.java----91----message.setNewRoomId(target.getRoomId(event.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventListener.java----108----message.setNewRoomId(event.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventProducer.java----118----event.roomId(update.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventProducer.java----119----event.roomTypeId(context.getPropertyAreaMap().get(update.getRoomId()).getConfiguration().getRoomTypeId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventProducer.java----121----event.oldRoomId(current.getRoomId(context.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\RoomUpdatedEventHandler.java----92----roomType.getRoomAllocations().put(event.getRoomId(), room);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\RoomUpdatedEventHandler.java----105----roomType.getRoomAllocations().remove(event.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\RoomUpdatedEventHandler.java----123----roomType.getRoomAllocations().put(event.getRoomId(), room);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HistoryHandler.java----49----roomIds.add(castedEvent.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HistoryHandler.java----72----!castedEvent.getOldRoomId().equals(castedEvent.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HistoryHandler.java----113----roomNumber(audit.getRoomId(), assist)));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HistoryHandler.java----117----return historyEvent(audit, String.format("Room (%s) assigned", roomNumber(audit.getRoomId(), assist)));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HistoryHandler.java----121----return historyEvent(audit, String.format("Room (%s) unassigned", roomNumber(audit.getRoomId(), assist)));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockHandler.java----66----if (roomIdSet.contains(result.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyDateRollHandler.java----101----roomIds.add(inventoryBlock.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyDateRollHandler.java----118----log.warn("Reconciled room {} ({} {}) occupancy status to {}", status.getRoomId(),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----280----new ReservationAllocationRoomUpdate(assignRoomRequest.getRoomId(), Action.CONFIRM);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----315----roomTypeAllocation.getValue().getRoomAllocations().get(request.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----346----roomUpdate.setRoomId(update.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----782----new ReservationAllocationRoomUpdate(roomAllocationRequest.getRoomId(), Action.CONFIRM);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----834----new RoomAndBuildingDetail(room.getRoomId(), room.getRoomNumber(), room.getRoomTypeId(),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----168----roomMap.put(room.getRoomId(), new RoomContext(room));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----169----roomNumberMap.put(room.getRoomId(), room.getRoomTypeId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----685----setId(source.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----169----discrepantRoomMap.put(discrepantRoom.getRoomId(), discrepantRoom);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----287----String roomId = resetRoomUsage.getRoomId();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----377----roomIdsWithSection.put(wrapper.getRoomId(), housekeepingSection.getName());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----378----roomIdsWithOrder.put(wrapper.getRoomId(), roomOrder);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomOccupancyStatusHandler.java----71----.filter(status -> originalIds.contains(status.getRoomId()) || status.isUpdated()).collect(toList());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomOccupancyStatusHandler.java----106----result.put(reservation.getRoomId(propertyDate), CanonicalId.OCCUPIED);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----155----if (finder.getRoomId(reservation, endDate) != null) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----161----String roomId = finder.getRoomId(reservation, date);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----192----map.put(inventoryBlock.getRoomId(effectiveEndDate),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\InventoryBlockAllocationManager.java----127----Set<String> roomIds = Sets.newHashSet(origin.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\InventoryBlockAllocationManager.java----129----Sets.newHashSet(assist.getPropertyAreaMap().get(origin.getRoomId()).getConfiguration().getRoomTypeId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\InventoryBlockAllocationManager.java----141----Set<String> roomIds = Sets.newHashSet(current.getRoomId(assist.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----981----String roomId = locationDetails.getRoomId();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----182----update.getRoomId().equals(current.getHeldRoomId(context.getPropertyDate()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----192----assist.getPropertyAreaMap().get(update.getRoomId()).getConfiguration().getRoomTypeId();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----377----Sets.newHashSet(current.getRoomId(assist.getPropertyDate())),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----446----Set<String> roomIds = Sets.newHashSet(update.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----448----Sets.newHashSet(assist.getPropertyAreaMap().get(update.getRoomId()).getConfiguration().getRoomTypeId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----467----Sets.newHashSet(current.getRoomId(assist.getPropertyDate())),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AllocationByTypeFilteringOperation.java----109----"Skipping room allocated by type; roomId: {}", candidate.getRoomId()) == NextAction.EJECT) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AllocationFilteringOperation.java----49----Exclusion exclusion = allocatedRoomIds.get(candidate.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AllocationFilteringOperation.java----54----candidate.getRoomId()) == NextAction.EJECT);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----61----"room is unavailable for checkin; roomId: {}", candidateRoom.getRoomId()) ==
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----66----"auto assign has already completed; skipping roomId: {}", candidateRoom.getRoomId()) ==
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----82----update.setRoomId(candidates.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----91----"failed to allocate room for room id:{} and allocation id:{}, error:{}", candidates.getRoomId(),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----103----update.setRoomId(renewAllocationRequest.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AvailableForCheckInFilteringOperation.java----41----"skipping room not ready for checkin; roomId: {}", candidateRoom.getRoomId()) ==
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\EventualExclusionFilteringOperation.java----41----"Skipping roomId : {} eventual exclusion filtered: {}", candidate.getRoomId(),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\LinkedReservationOrderingOperation.java----161----return Boolean.compare(rooms.contains(room2.getRoomId()), rooms.contains(room1.getRoomId()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\OccupancyStatusFilteringOrTaggingOperation.java----34----"skipping currently occupied room; roomId: {}", candidate.getRoomId()) ==
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\OccupancyStatusFilteringOrTaggingOperation.java----43----(!context.getRequest().isIncludeCurrent() || !candidate.getRoomId()
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\SearchCriteriaTaggingOperation.java----66----!context.getRequest().getRoomIds().contains(candidate.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\SearchResultsOperation.java----48----"Result limit reached; skipping roomId: {}", candidateRoom.getRoomId()) == NextAction.EJECT) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\InventoryBlockAllocationValidator.java----24----validateRoomViable(allocationOrigin.getRoomId(), assist.getPropertyAreaMap().get(allocationOrigin.getRoomId()),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\InventoryBlockValidator.java----15----if (!roomId.equals(result.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\InventoryBlockValidator.java----57----if (StringUtils.isBlank(inventoryBlock.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\InventoryBlockValidator.java----61----if (!roomId.equalsIgnoreCase(inventoryBlock.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----86----verifyNoRoomConfirmed(current.getRoomId(assist.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----129----verifyNoRoomConfirmed(current.getRoomId(assist.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----141----.put(PropertyContextKey.ID, update.getRoomId()), update.getRoomId(),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----142----current.getRoomId(assist.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----144----current.getRoomId(assist.getPropertyDate()).equals(update.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----148----validateRoomViable(id, assist.getPropertyAreaMap().get(update.getRoomId()),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\RoomStatusValidator.java----54----if (roomStatus.getRoomId() == null || roomStatus.getRoomId().isEmpty() ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\AllocationCountOperation.java----38----if (context.isByBuilding()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\AllocationCountOperation.java----52----if (context.isByBuilding()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\CalculateOperation.java----20----if (context.isByBuilding()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----49----if (context.isByBuilding()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----84----if (context.isByBuilding()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\assist\RoomAssist.java----211----physicalRoomTypeIdsByVirtualRoomTypeId = HashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\AvailabilityMatrix.java----22----private final Table<LineItemId, LocalDate, BigDecimal> byDate = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\GroupMatrix.java----29----table = TreeBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----26----Table<String, LocalDate, Integer> table = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----27----Table<String, LocalDate, Integer> nonBeddedtable = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----54----.computeIfAbsent(buildingEntry.getKey(), s -> HashBasedTable.create()) : null;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----58----tableByBuilding.computeIfAbsent(buildingEntry.getKey(), s -> HashBasedTable.create()) :
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\config\PropertyConfigContext.java----333----return jaxrsServerFactoryBean.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationCriteriaBuilder.java----158----Multimap<ExternalReferenceType, String> byReferenceType = LinkedHashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\PropertyRoomRepository.java----146----Multimap<String, RoomStatusUpdateMote<?>> updatesByRoom = LinkedHashMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----423----BatchRoomsDomain createdBatchRoomsDomain = batchRoomsRepository.create(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----447----BatchRoomsDomain createdBatchRoomsDomain = batchRoomsRepository.create(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\BuildingHandler.java----38----Building createdBuilding = super.create(assist, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CancellationPolicyHandler.java----66----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----124----creditCardAuthRuleSettingsRepository.create(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\GroupAllocationHandler.java----30----GroupAllocation interim = manager.create(assist, origin, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockAllocationHandler.java----30----InventoryBlockAllocation interim = manager.create(assist, origin, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\MealPeriodHandler.java----28----return super.create(assist, document);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----106----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----112----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OutletHandler.java----49----return super.create(assist, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomTypeHandler.java----56----RoomType createdRoomType = super.create(assist, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----81----private Multimap<String, PropertyRoom> roomMap = LinkedListMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----82----private Multimap<String, TapeChartAllocation<?>> allocationMap = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----139----Multimap<String, TapeChartAllocation<TapeChartReservation>> map = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----184----Multimap<String, TapeChartAllocation<TapeChartInventoryBlock>> map = TreeMultimap.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----336----HashBasedTable<LocalDate, String, AtomicInteger> deficiency = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----459----HashBasedTable<LocalDate, String, Map<String, RoomAllocationDomain>> table = HashBasedTable.create();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----367----return bedHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.BED), bed);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----396----return buildingHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.BUILDING), building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----683----return mealPeriodHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.MEAL_PERIOD), mealPeriod);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----804----return outletHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.OUTLET), outlet);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1006----return roomClassHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_CLASS), roomClass);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1035----return roomFeatureHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_FEATURE), roomFeature);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1173----return roomTypeHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_TYPE), roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1213----return vipStatusHandler.create(propertyWriter(tenantId, propertyId), vipStatus);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1399----return lostItemHandler.create(propertyWriter(tenantId, propertyId, ReferenceType.LOST_ITEMS), lostItem);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationRepository.java----128----aggregations.add(fields.toProjectionOperation());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationRepository.java----147----aggregations.add(fields.toProjectionOperation());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\RoomTypeDomain.java----277----roomType.setDefaultBuildingId(defaultBuildingId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----131----context = availabilityManager.getAvailability(context);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----138----availabilityResultDetail.setScopedAvailability(availabilityByRefManager.getAvailability(request, context));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----148----AvailabilityContext context = availabilityManager.getAvailability(assist, startDate, endDate, true, true);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----184----availabilityManager.getAvailability(assist, startDate, endDate, true, includeNonBeddedRoomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----267----AvailabilityContext context = availabilityManager.getAvailability(assist, startDate, endDate, false);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaAvailabilityHandler.java----28----context = availabilityManager.getAvailability(context);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----482----availabilityContext = availabilityManager.getAvailability(availabilityContext);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----512----if (!result.getAvailability().containsKey(date)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----513----result.getAvailability().put(date, byRoomTypeResult);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyAvailabilityImplementation.java----259----return availabilityHandler.getAvailability(roomAssist(tenantId, propertyId), availabilityRequest);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AllocationByTypeFilteringOperation.java----221----ImmutableTable<LocalDate, String, AtomicInteger> table = tableBuilder.build();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\helper\GeneralAvailabilityResultHelper.java----151----for (LocalDate date : context.getDates()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\helper\GeneralAvailabilityResultHelper.java----152----lineItem.getDates().put(date, value(availabilityMatrix.getByDate(id, date), valueType));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AvailabilityByExternalReferenceManager.java----62----context.getReferenceIds(RoomTypeDomain.class), context.getDates(), null);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AvailabilityByExternalReferenceManager.java----86----for (LocalDate date : context.getDates()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\audit\model\InventoryBlockAuditModel.java----60----room = allocation.getRoomId(propertyDate);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\audit\model\ReservationAllocationAuditModel.java----62----room = allocation.getRoomId(propertyDate);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----144----if (stringSetEntry.getValue().contains(roomKey.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\batch\BatchHandler.java----168----jobDetail.setRoomId(request.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\batch\BatchReleaseRoomConsumer.java----33----batchRoomJobDetail.getAllocationId(), batchRoomJobDetail.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\batch\BatchRenewConsumer.java----27----batchRoomJobDetail.getAllocationId(), batchRoomJobDetail.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\HousekeepingSectionDomain.java----66----domain.getRoomIds().add(room.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\lostAndFound\LocationDetailsDomain.java----29----roomId = locationDetails.getRoomId();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\lostAndFound\LocationDetailsDomain.java----34----{ ROOM_NUMBER, L.roomId, R.getRoomId() },
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PropertyRoomStatistics.java----19----super(room.getRoomId(), room.getTenantId(), room.getPropertyId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PropertyRoomStatus.java----22----super(roomStatus.getRoomId(), roomStatus.getTenantId(), roomStatus.getPropertyName());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\PropertyRoomRepository.java----148----updatesByRoom.put(statusUpdate.getRoomId(), statusUpdate);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\inventoryblock\CreatedEventHandler.java----46----if (event.getRoomTypeId() != null && event.getRoomId() != null) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\inventoryblock\CreatedEventHandler.java----53----roomType.getRoomAllocations().put(event.getRoomId(), room);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\inventoryblock\InventoryBlockEventProducer.java----21----event.roomId(origin.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\inventoryblock\InventoryBlockEventProducer.java----22----event.roomTypeId(context.getPropertyAreaMap().get(origin.getRoomId()).getConfiguration().getRoomTypeId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventListener.java----68----String currentRoomId = allocation.getRoomId(propertyDate);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventListener.java----91----message.setNewRoomId(target.getRoomId(event.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventListener.java----108----message.setNewRoomId(event.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventProducer.java----118----event.roomId(update.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventProducer.java----119----event.roomTypeId(context.getPropertyAreaMap().get(update.getRoomId()).getConfiguration().getRoomTypeId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventProducer.java----121----event.oldRoomId(current.getRoomId(context.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\RoomUpdatedEventHandler.java----92----roomType.getRoomAllocations().put(event.getRoomId(), room);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\RoomUpdatedEventHandler.java----105----roomType.getRoomAllocations().remove(event.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\RoomUpdatedEventHandler.java----123----roomType.getRoomAllocations().put(event.getRoomId(), room);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HistoryHandler.java----49----roomIds.add(castedEvent.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HistoryHandler.java----72----!castedEvent.getOldRoomId().equals(castedEvent.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HistoryHandler.java----113----roomNumber(audit.getRoomId(), assist)));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HistoryHandler.java----117----return historyEvent(audit, String.format("Room (%s) assigned", roomNumber(audit.getRoomId(), assist)));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HistoryHandler.java----121----return historyEvent(audit, String.format("Room (%s) unassigned", roomNumber(audit.getRoomId(), assist)));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockHandler.java----66----if (roomIdSet.contains(result.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyDateRollHandler.java----101----roomIds.add(inventoryBlock.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyDateRollHandler.java----118----log.warn("Reconciled room {} ({} {}) occupancy status to {}", status.getRoomId(),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----280----new ReservationAllocationRoomUpdate(assignRoomRequest.getRoomId(), Action.CONFIRM);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----315----roomTypeAllocation.getValue().getRoomAllocations().get(request.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----346----roomUpdate.setRoomId(update.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----782----new ReservationAllocationRoomUpdate(roomAllocationRequest.getRoomId(), Action.CONFIRM);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----834----new RoomAndBuildingDetail(room.getRoomId(), room.getRoomNumber(), room.getRoomTypeId(),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----168----roomMap.put(room.getRoomId(), new RoomContext(room));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----169----roomNumberMap.put(room.getRoomId(), room.getRoomTypeId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----685----setId(source.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----169----discrepantRoomMap.put(discrepantRoom.getRoomId(), discrepantRoom);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----287----String roomId = resetRoomUsage.getRoomId();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----377----roomIdsWithSection.put(wrapper.getRoomId(), housekeepingSection.getName());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----378----roomIdsWithOrder.put(wrapper.getRoomId(), roomOrder);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomOccupancyStatusHandler.java----71----.filter(status -> originalIds.contains(status.getRoomId()) || status.isUpdated()).collect(toList());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomOccupancyStatusHandler.java----106----result.put(reservation.getRoomId(propertyDate), CanonicalId.OCCUPIED);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----155----if (finder.getRoomId(reservation, endDate) != null) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----161----String roomId = finder.getRoomId(reservation, date);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----192----map.put(inventoryBlock.getRoomId(effectiveEndDate),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\InventoryBlockAllocationManager.java----127----Set<String> roomIds = Sets.newHashSet(origin.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\InventoryBlockAllocationManager.java----129----Sets.newHashSet(assist.getPropertyAreaMap().get(origin.getRoomId()).getConfiguration().getRoomTypeId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\InventoryBlockAllocationManager.java----141----Set<String> roomIds = Sets.newHashSet(current.getRoomId(assist.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----981----String roomId = locationDetails.getRoomId();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----182----update.getRoomId().equals(current.getHeldRoomId(context.getPropertyDate()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----192----assist.getPropertyAreaMap().get(update.getRoomId()).getConfiguration().getRoomTypeId();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----377----Sets.newHashSet(current.getRoomId(assist.getPropertyDate())),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----446----Set<String> roomIds = Sets.newHashSet(update.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----448----Sets.newHashSet(assist.getPropertyAreaMap().get(update.getRoomId()).getConfiguration().getRoomTypeId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----467----Sets.newHashSet(current.getRoomId(assist.getPropertyDate())),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AllocationByTypeFilteringOperation.java----109----"Skipping room allocated by type; roomId: {}", candidate.getRoomId()) == NextAction.EJECT) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AllocationFilteringOperation.java----49----Exclusion exclusion = allocatedRoomIds.get(candidate.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AllocationFilteringOperation.java----54----candidate.getRoomId()) == NextAction.EJECT);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----61----"room is unavailable for checkin; roomId: {}", candidateRoom.getRoomId()) ==
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----66----"auto assign has already completed; skipping roomId: {}", candidateRoom.getRoomId()) ==
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----82----update.setRoomId(candidates.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----91----"failed to allocate room for room id:{} and allocation id:{}, error:{}", candidates.getRoomId(),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AutoAssignOperation.java----103----update.setRoomId(renewAllocationRequest.getRoomId());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AvailableForCheckInFilteringOperation.java----41----"skipping room not ready for checkin; roomId: {}", candidateRoom.getRoomId()) ==
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\EventualExclusionFilteringOperation.java----41----"Skipping roomId : {} eventual exclusion filtered: {}", candidate.getRoomId(),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\LinkedReservationOrderingOperation.java----161----return Boolean.compare(rooms.contains(room2.getRoomId()), rooms.contains(room1.getRoomId()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\OccupancyStatusFilteringOrTaggingOperation.java----34----"skipping currently occupied room; roomId: {}", candidate.getRoomId()) ==
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\OccupancyStatusFilteringOrTaggingOperation.java----43----(!context.getRequest().isIncludeCurrent() || !candidate.getRoomId()
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\SearchCriteriaTaggingOperation.java----66----!context.getRequest().getRoomIds().contains(candidate.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\SearchResultsOperation.java----48----"Result limit reached; skipping roomId: {}", candidateRoom.getRoomId()) == NextAction.EJECT) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\InventoryBlockAllocationValidator.java----24----validateRoomViable(allocationOrigin.getRoomId(), assist.getPropertyAreaMap().get(allocationOrigin.getRoomId()),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\InventoryBlockValidator.java----15----if (!roomId.equals(result.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\InventoryBlockValidator.java----57----if (StringUtils.isBlank(inventoryBlock.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\InventoryBlockValidator.java----61----if (!roomId.equalsIgnoreCase(inventoryBlock.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----86----verifyNoRoomConfirmed(current.getRoomId(assist.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----129----verifyNoRoomConfirmed(current.getRoomId(assist.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----141----.put(PropertyContextKey.ID, update.getRoomId()), update.getRoomId(),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----142----current.getRoomId(assist.getPropertyDate()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----144----current.getRoomId(assist.getPropertyDate()).equals(update.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----148----validateRoomViable(id, assist.getPropertyAreaMap().get(update.getRoomId()),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\RoomStatusValidator.java----54----if (roomStatus.getRoomId() == null || roomStatus.getRoomId().isEmpty() ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----899----return roomHandler.getMetrics(roomAssist(tenantId, propertyId), reportDate, includeNonBeddedRoomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----905----return roomHandler.getMetrics(roomAssist(tenantId, propertyId), reportDate, generalAvailabilityRequest);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\assist\RoomAssist.java----262----query.roomIds(allRooms ? null : ids);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----287----this.roomIds = roomIds;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\HousekeepingSectionDomain.java----43----this.roomIds = roomIds;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\RoomInclusionFilter.java----15----this.roomIds = roomIds;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\query\AllocationQuery.java----50----this.roomIds = roomIds;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\query\AllocationQuery.java----155----this.roomIds = roomIds;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\context\RoomSelectionRequest.java----144----this.roomIds = roomIds;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomOccupancyStatusHandler.java----95----query.roomIds(new HashSet<>(roomIds));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\GroupMatrix.java----98----this.value = value;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\matrix\GroupMatrix.java----105----this.value = value;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AuthorizationSettingsDomain.java----77----this.value = value;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\OtaInterfaceDomain.java----131----Boolean booleanValue = Boolean.valueOf(value);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\OtaInterfaceDomain.java----152----integerValue = Integer.valueOf(value);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\query\RoomStatusUpdateMote.java----27----this.value = value;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\query\RoomStatusUpdateMote.java----32----this.value = value;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\AllocationCountOperation.java----42----cursor = allocationRepository.aggregateAvailability(context.getTenantId(), context.getPropertyId(), query);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\BuildingHandler.java----56----return super.update(assist, id, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----151----roomTypeHandler.update(propertyWriterAssist, associatedRoomTypes);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----167----buildingHandler.update(propertyWriterAssist, associatedBuildings);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----238----creditCardAuthRuleSettingsRepository.update(
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----261----creditCardAuthRuleSettingsRepository.update(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----578----creditCardAuthRuleSettingsRepository.update(existingCreditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----588----creditCardAuthRuleSettingsRepository.update(creditCardAuthRuleSettingsDomain).toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\GroupAllocationHandler.java----60----GroupAllocation interim = manager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\InventoryBlockAllocationHandler.java----56----InventoryBlockAllocation interim = manager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\MealPeriodHandler.java----35----return super.update(assist, id, document);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----118----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----128----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OutletHandler.java----75----return super.update(assist, id, item);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyHandler.java----133----return update(assist, assist.updateProperty(new PmsProperty(property)).toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----256----ReservationAllocation interim = reservationAllocationManager.update(assist, ident, update, overbook);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomTypeHandler.java----74----return super.update(assist, id, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----287----return propertyHandler.update(propertyWriter(tenantId, propertyId), property);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----382----return bedHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.BED), id, bed);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----411----return buildingHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.BUILDING), id, building);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----819----return outletHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.OUTLET), id, outlet);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1021----return roomClassHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_CLASS), id, roomClass);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1193----return roomTypeHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.ROOM_TYPE), id, roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----1234----return vipStatusHandler.update(propertyWriter(tenantId, propertyId, ReferenceType.VIP_STATUS), id, vipStatus);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\operation\AllocationByTypeFilteringOperation.java----221----ImmutableTable<LocalDate, String, AtomicInteger> table = tableBuilder.build();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\recovery\ReservationAllocationResolver.java----104----allocationManager.repair(assist, identifier(allocation), repair);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----370----return reservationAllocationManager.repair(assist, ident, repair)
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\assist\RoomAssist.java----302----departureDate == Boolean.TRUE.equals(dailyAllocationDomain.getDepartureDate())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----203----return Objects.equals(roomTypeId, roomKey.roomTypeId) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----204----Objects.equals(startDate, roomKey.startDate) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----205----Objects.equals(endDate, roomKey.endDate) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----206----Objects.equals(roomId, roomKey.roomId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\batch\BatchHandler.java----251----if (roomAllocation != null && RoomAllocationStatus.HOLD.equals(roomAllocation.getStatus()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationRepository.java----178----if (Boolean.TRUE.equals(query.getRetainAllDates())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationRepository.java----197----if (Boolean.TRUE.equals(query.getRetainAllDates())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationRepository.java----229----Boolean.TRUE.equals(domain.getDailyAllocations().get(domain.getStartDate()).getArrivalDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\AllocationRepository.java----230----Boolean.TRUE.equals(domain.getDailyAllocations().get(domain.getStartDate()).getDepartureDate()) ?
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocatedEntity.java----112----} else if (!id.equals(other.id)) return false;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----399----if (Boolean.TRUE.equals(dailyAllocation.getArrivalDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----400----!Boolean.TRUE.equals(dailyAllocation.getDepartureDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----401----!Boolean.TRUE.equals(dailyAllocation.getArrived())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----404----if (Boolean.TRUE.equals(dailyAllocation.getDepartureDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----405----Boolean.TRUE.equals(dailyAllocation.getDeparted())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\AllocationDomain.java----408----if (Boolean.TRUE.equals(dailyAllocation.getDepartureDate())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\HomepagePreferenceDomain.java----103----return Objects.equals(id.getTenantId(), that.id.getTenantId()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\HomepagePreferenceDomain.java----104----Objects.equals(id.getUserName(), that.id.getUserName());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\OtaInterfaceDomain.java----132----if (!booleanValue.equals(setting.getDefaultValue())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceCategoryDomain.java----92----return active == that.active && Objects.equals(id, that.id) && Objects.equals(tenantId, that.tenantId) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceCategoryDomain.java----93----Objects.equals(name, that.name) && Objects.equals(code, that.code) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceCategoryDomain.java----94----Objects.equals(description, that.description);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceDomain.java----116----return active == that.active && Objects.equals(id, that.id) && Objects.equals(tenantId, that.tenantId) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceDomain.java----117----Objects.equals(name, that.name) && Objects.equals(code, that.code) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PreferenceDomain.java----118----Objects.equals(description, that.description) && Objects.equals(categoryId, that.categoryId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ProfilePreferenceCategoryDomain.java----45----if (!super.equals(o)) return false;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ProfilePreferenceDomain.java----87----if (!super.equals(o)) return false;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ProfilePreferenceDomain.java----90----profileType == that.profileType && Objects.equals(allowables, that.allowables);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ProfilePreferenceOptionDomain.java----51----return Objects.equals(id, that.id) && Objects.equals(name, that.name);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----105----return Objects.equals(this.getId(), reservationBookingNoticeDomain.getId()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----106----Objects.equals(this.getTenantId(), reservationBookingNoticeDomain.getTenantId()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----107----Objects.equals(this.getPropertyId(), reservationBookingNoticeDomain.getPropertyId()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----108----Objects.equals(this.getMessage(), reservationBookingNoticeDomain.getMessage()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----109----Objects.equals(this.getStartDate(), reservationBookingNoticeDomain.getStartDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----110----Objects.equals(this.getEndDate(), reservationBookingNoticeDomain.getEndDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----111----Objects.equals(this.status, reservationBookingNoticeDomain.isStatus()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ReservationBookingNoticeDomain.java----112----Objects.equals(this.getOrder(), reservationBookingNoticeDomain.getOrder());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\ArrivalDateFilter.java----25----boolean isArrivalDate = Boolean.TRUE.equals(daily.getArrivalDate());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\ArrivalDateFilter.java----26----boolean isDepartureDate = Boolean.TRUE.equals(daily.getDepartureDate());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\ArrivalDateFilter.java----27----boolean isArrived = Boolean.TRUE.equals(daily.getArrived());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\DateInclusionFilter.java----22----return (Boolean.TRUE.equals(retainAllDates) || dates == null || dates.contains(date));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\DepartureDateFilter.java----22----boolean isDepartureDate = Boolean.TRUE.equals(daily.getDepartureDate());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\filter\DepartureDateFilter.java----23----boolean isDeparted = Boolean.TRUE.equals(daily.getDeparted());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\Allocation.java----122----!Boolean.TRUE.equals(daily.getDepartureDate())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\Allocation.java----153----} else if (!ObjectUtils.equals(attributes.get(key), value)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\ReservationAllocation.java----45----if (domain.getStatus() == status && (expectedRoomId == null || roomId.equals(expectedRoomId))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\ReservationAllocation.java----162----!Boolean.TRUE.equals(entry.getValue().getDepartureDate())).map(Map.Entry::getKey).sorted()
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\ReservationAllocation.java----174----return Boolean.TRUE.equals(daily.getArrived());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\interim\ReservationAllocation.java----187----return Boolean.TRUE.equals(daily.getDeparted());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\PropertyRoomRepository.java----201----!housekeepingRoomConditionId.equals(propertyRoom.getStatus().getHousekeepingRoomConditionId())) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\PropertyRoomRepository.java----203----!occupancyStatusId.equals(propertyRoom.getStatus().getOccupancyStatusId()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\dateroll\DateRollInvoker.java----71----if (Boolean.TRUE.equals(context.getForce()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\dateroll\DateRollInvoker.java----77----if (!Boolean.TRUE.equals(context.getForce())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\RepairedEventHandler.java----36----event.getArrived() != null ? Boolean.TRUE.equals(event.getArrived()) : allocation.isArrived();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\RepairedEventHandler.java----38----event.getDeparted() != null ? Boolean.TRUE.equals(event.getDeparted()) : allocation.isDeparted();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventHandler.java----85----return (Boolean.TRUE.equals(target.getDailyAllocations().get(target.getStartDate()).getArrived()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventHandler.java----89----return (Boolean.TRUE.equals(target.getDailyAllocations().get(target.getEndDate()).getDeparted()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventHandler.java----115----(Boolean.TRUE.equals(allocation.getDepartureDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventListener.java----93----if (ObjectUtils.equals(event.getDepartureDate(), event.getPropertyDate())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventListener.java----95----} else if (ObjectUtils.equals(event.getOldDepartureDate(), event.getPropertyDate())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventProducer.java----95----if (!newRoomTypeId.equals(oldRoomTypeId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\events\allocation\reservation\ReservationEventProducer.java----164----if (!repairTransientDates.equals(currentTransientDates)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\jobs\AllocationRebuildJobStrategy.java----43----.findByEventTypes((!tenantId.equals(ALL_TENANTS) ? tenantId : null),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\recovery\ReservationAllocationResolver.java----166----} else if (allowed.equals(allocation.isArrived())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\recovery\ReservationAllocationResolver.java----188----} else if (allowed.equals(allocation.isDeparted())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\recovery\ReservationAllocationResolver.java----212----return Stream.of(allowed).map(CanonicalId::getId).anyMatch(id -> id.equals(status));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\context\RoomSelectionContext.java----119----if (!otherAssociatedId.equals(associatedId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\context\RoomSelectionRequest.java----314----includeCurrent = Boolean.TRUE.equals(params.getIncludeCurrent());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\context\RoomSelectionRequest.java----338----includeUnavailable = Boolean.TRUE.equals(params.getUnavailable());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\context\RoomSelectionRequest.java----339----verbose = Boolean.TRUE.equals(params.getVerbose());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AnimalTypeHandler.java----147----if (id.equals(petSettings.getPerReservationChargeId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AnimalTypeHandler.java----152----.filter(animalTypes -> StringUtils.equals(animalTypes.getChargeId(), id)).findFirst();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----130----if (Boolean.TRUE.equals(request.getIncludeOverallAvailability())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----149----if (params != null && Boolean.TRUE.equals(params.isLocalOnly())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailabilityHandler.java----232----if (params != null && Boolean.TRUE.equals(params.isLocalOnly())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----366----if (BatchRoomStatusType.CANCELLED.equals(batchRooms.getBatchRoomStatusType())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----427----if (creditCardAuthRuleSettingsId.equals(existingCreditCardAuthRuleSettingsId) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----533----if (DEFAULT_CREDIT_CARD_AUTH_RULE_SETTINGS_ID.equals(creditCardAuthRuleSettingsId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\lostandfound\LostAndFoundBaseCommandHandler.java----162----if ((newValue == oldValue) || (newValue != null && oldValue != null && oldValue.equals(newValue))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----137----if (params != null && (Boolean.TRUE.equals(params.getFederatedRatesEnabled()) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----138----Boolean.TRUE.equals(params.getCompCertificateEnabled()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----159----if (params != null && (Boolean.TRUE.equals(params.getFederatedRatesEnabled()) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----160----Boolean.TRUE.equals(params.getCompCertificateEnabled()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----163----(Boolean.TRUE.equals(params.getFederatedRatesEnabled()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----165----Boolean.TRUE.equals(otaInterface
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----167----(Boolean.TRUE.equals(params.getCompCertificateEnabled()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----169----Boolean.TRUE.equals(otaInterface
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyDateHandler.java----391----if (null != autoCloseDateSetting && Boolean.class.equals(autoCloseDateSetting.getTypeClass()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyHandler.java----355----if (accountId.equals(pantrySetting.getAssociatedHouseAccountId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----199----if (Boolean.TRUE.equals(dailyAllocation.getDepartureDate()) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----309----if ((departureDate.isAfter(date) && arrivalDate.isBefore(date)) || departureDate.equals(date) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----310----arrivalDate.equals(date)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----320----departureDate.equals(date) || dailyAllocation.getDepartureDate() != null &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----321----dailyAllocation.getDepartureDate() && arrivalDate.equals(date)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----96----if (clazz.equals(CandidateRoom.class)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----98----} else if (clazz.equals(PropertyRoom.class)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----230----room.setIsADA(Boolean.TRUE.equals(context.getConfiguration().getIsADA()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----640----return Boolean.TRUE.equals(petAllowed) ? petAllowed : roomType != null && roomType.isPets();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomBuilder.java----645----(getConfiguration() != null && Boolean.TRUE.equals(getConfiguration().getIsADA()))) : isAdaAggregate);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----362----if (!originalRoomNumber.equals(updatedRoomNumber)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----436----if (building.equals(room.getConfiguration().getBuildingId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----496----if (building.equals(room.getConfiguration().getBuildingId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----622----if (!currentId.equals(previousId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----163----if (!ObjectUtils.equals(roomId, currentRoomId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\TapeChartBuilder.java----231----if (Boolean.TRUE.equals(propertyRoom.getConfiguration().getIsADA())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\AllocationManager.java----500----if (Boolean.TRUE.equals(daily.getDepartureDate()) && !startDate.equals(date)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\EventingManager.java----161----if (!DIRECT_CLOSED.equals(triple.field.toString())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\EventingManager.java----326----} else if (PROFILE_ID.equals(field)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\EventingManager.java----328----} else if (AREA_ID.equals(field)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\FoundItemManager.java----210----if (!matchId.equals(id)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\FoundItemManager.java----404----if (!claimId.equals(matchId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----357----if (LOST_STATUS.equals(initialStatus)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----360----} else if (FOUND_UNCLAIMED_STATUS.equals(initialStatus)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----406----if (Boolean.TRUE.equals(params.getIncludeComments())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----455----if (FOUND_UNCLAIMED_STATUS.equals(itemStatusCountId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----458----if (FOUND_CLAIMED_STATUS.equals(itemStatusCountId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----816----if (!FOUND_UNCLAIMED_STATUS.equals(summaryInfo.getInitialStatus())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----930----if (LOST_STATUS.equals(summaryInfo.getInitialStatus()) || !storageLocationRequire) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----944----if (FOUND_UNCLAIMED_STATUS.equals(summaryInfo.getInitialStatus())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----991----if (null != areaId && GENERAL_AREA.equals(areaId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\PropertyBootstrapRunner.java----107----if(!existingItem.equals(defaultPropertySetting)){
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\PropertyBootstrapRunner.java----117----return existingItems.stream().filter(existing -> Objects.equals(existing.getIdentifier(), item.getIdentifier()))
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----193----if (!currentRoomTypeId.equals(newRoomTypeId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\ReservationAllocationManager.java----196----currentRoomTypeId.equals(assist.getVirtualRoomTypeIdByPhysicalRoomTypeId().get(newRoomTypeId))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AllocationValidator.java----94----if (!Objects.equals(value, expectedValue)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AllocationValidator.java----125----if (ObjectUtils.equals(value, unexpectedValue)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AnimalTypeValidator.java----20----if (animalTypes.equals(existing) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AnimalTypeValidator.java----32----if (!AnimalTypes.SERVICE_ANIMAL_ID.equals(animalTypes.getId()) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AnimalTypeValidator.java----34----!AnimalTypes.SERVICE_ANIMAL.equals(animalTypes.getAnimal())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\AssociationValidator.java----27----if (Boolean.TRUE.equals(daily.getDepartureDate()) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\CancellationPolicyValidator.java----47----(policy.getMatchDepositPolicy() == null || Boolean.FALSE.equals(policy.getMatchDepositPolicy()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\CancellationPolicyValidator.java----52----(policy.getFlatFee() != null && Boolean.TRUE.equals(policy.getMatchDepositPolicy())) ||
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\CancellationPolicyValidator.java----53----(policy.getNights() != null && Boolean.TRUE.equals(policy.getMatchDepositPolicy()))) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\InventoryBlockValidator.java----15----if (!roomId.equals(result.getRoomId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\LostAndFoundBaseValidator.java----108----if (!id.equals(reqObjectId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\LostAndFoundBaseValidator.java----111----if (!propertyId.equals(reqPropertyId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\LostAndFoundBaseValidator.java----114----if (!tenantId.equals(reqTenantId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ProfilePreferenceCategoryValidator.java----36----if ((existingCategory == null || !Objects.equals(existingCategory.getCode(), category.getCode())) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ProfilePreferenceValidator.java----39----if ((existingPreference == null || !Objects.equals(preference.getCode(), existingPreference.getCode())) &&
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReferenceValidator.java----67----if (!uriId.equals(model.getId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReferenceValidator.java----75----if (!uriTenantId.equals(itemTenantId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReferenceValidator.java----83----if (!uriPropertyId.equals(itemPropertyId)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----181----if (Boolean.TRUE.equals(repair.getArrived())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----185----if (Boolean.TRUE.equals(repair.getDeparted())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationAllocationValidator.java----200----if (arrivalDate.equals(departureDate)) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\validation\ReservationBookingNoticeValidator.java----71----if (!id.equals(reservationBookingNotice.getId())) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyAvailabilityImplementation.java----224----return availabilityHandler.getGeneralAvailability(roomAssist(tenantId, propertyId), startDate, endDate, params);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\AllocationCountOperation.java----42----cursor = allocationRepository.aggregateAvailability(context.getTenantId(), context.getPropertyId(), query);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----899----return roomHandler.getMetrics(roomAssist(tenantId, propertyId), reportDate, includeNonBeddedRoomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\PropertyManagementImplementation.java----905----return roomHandler.getMetrics(roomAssist(tenantId, propertyId), reportDate, generalAvailabilityRequest);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\batch\BatchHandler.java----185----List<Job> jobs = JobDetail.toModel(jobDetails);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\BasePmsProperty.java----19----models.add((MODEL) domain.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\CreditCardAuthRuleSettingsDomain.java----160----creditCardAuthRuleSettings.setAuthorizationSettings(authorizationSettings.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\CreditCardAuthRuleSettingsDomain.java----169----.forEach(ccAuthRuleSettingsDomain -> creditCardAuthRuleSettings.add(ccAuthRuleSettingsDomain.toModel()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ExternalReferenceDomain.java----106----return (domain != null ? domain.toModel() : null);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\FiscalYearDomain.java----111----fiscalYears.add(fiscalYearDomain.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\GeneralAreaTypeDomain.java----33----super.toModel(generalAreaType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\GeneralAreaTypeDomain.java----42----super.toModel(generalAreaType, tenantId, propertyId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\lostAndFound\GuestProfileInfoDomain.java----74----GuestProfileInfo guestProfileInfo = super.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\lostAndFound\LocationDetailsDomain.java----76----LocationDetails locationDetails = super.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\lostAndFound\LostAndFoundItemDomain.java----221----lostAndFoundItem.setLocationDetails(locationDetails.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\lostAndFound\LostAndFoundItemDomain.java----227----lostAndFoundItem.setGuestProfileInfo(guestProfileInfo.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PmsProperty.java----702----property.setAuthorizationSettings(authorizationSettings.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PmsProperty.java----704----property.setCasinoSettings(casinoSettings != null ? casinoSettings.toModel() : null);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PmsProperty.java----751----property.setGlCodeTemplateSetting(glCodeTemplate.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\ProfilePreferenceDomain.java----73----profileType.toModel(),
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PropertyGeneralArea.java----91----generalAreas.add(propertyGeneralArea.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\PropertyRoom.java----109----rooms.add(propertyRoom.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\RoomMoveReasonDomain.java----125----roomMoveReasons.add(roomMoveReasonDomain.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\RoomTypeDomain.java----240----super.toModel(roomType);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\data\domain\RoomTypeDomain.java----249----super.toModel(roomType, tenantId, propertyId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AllocatedRoomsHandler.java----145----ExternalReference externalReference = ExternalReferenceDomain.toModel(allocation.getExternalReference());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----333----batchRooms = domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----340----batchRooms = domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----377----batchRooms = domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----389----batchRooms = domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----405----return batchRoomsDomain == null ? null : batchRoomsDomain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----427----BatchRooms batchRooms = createdBatchRoomsDomain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\AvailableRoomsHandler.java----451----BatchRooms batchRooms = createdBatchRoomsDomain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----350----return creditCardAuthRuleSettingsDomain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----356----return creditCardAuthRuleSettingsDomain != null ? creditCardAuthRuleSettingsDomain.toModel() : null;
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\CreditCardAuthRuleSettingsHandler.java----423----addToAssociatedIds(tenantId, propertyId, creditCardAuthRuleSettingsDomain.toModel(), associateId);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\GeneralAreaHandler.java----75----return area.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\GeneralAreaTypeHandler.java----21----return generalAreaTypeDomain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HomepagePreferenceHandler.java----41----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HousekeepingRoomConditionHandler.java----22----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\HousekeepingSectionHandler.java----45----return (domain != null ? domain.toModel() : null);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\lostandfound\FoundItemCommandHandler.java----94----null != locationDetailsDomain ? locationDetailsDomain.toModel() : null, currentStatus);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\lostandfound\LostAndFoundBaseCommandHandler.java----47----events.add(new LocationDetailsUpdatedEvent(locationDetailsDomain.toModel(), currentStatus));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\lostandfound\LostAndFoundBaseCommandHandler.java----63----GuestProfileInfo guestProfileInfo = guestProfileInfoDomain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\lostandfound\LostItemCommandHandler.java----84----null != locationDetailsDomain ? locationDetailsDomain.toModel() : null, currentStatus);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\MappedReferenceHandler.java----163----return converter.toModel(domain);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\MappedReferenceHandler.java----172----models.add(converter.toModel(domain));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OccupancyStatusHandler.java----20----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\OtaInterfaceHandler.java----61----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ProfilePreferenceCategoryHandler.java----32----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ProfilePreferenceCategoryHandler.java----46----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ProfilePreferenceCategoryHandler.java----54----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ProfilePreferenceCategoryHandler.java----65----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ProfilePreferenceHandler.java----57----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ProfilePreferenceHandler.java----72----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ProfilePreferenceHandler.java----88----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyDateHandler.java----155----return dateRollConverter.toModel(dateRoll);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyDateHandler.java----173----return dateRollConverter.toModel(dateRoll);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyDateHandler.java----183----return dateRollConverter.toModel(dateRoll);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\PropertyHandler.java----80----pmsProperties.forEach(pmsProperty -> properties.add(pmsProperty.toModel()));
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationAllocationHandler.java----832----Room room = propertyRoom.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationBookingNoticeHandler.java----38----return reservationBookingNoticeDomain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationBookingNoticeHandler.java----45----.stream().map(p -> p.toModel()).collect(Collectors.toList());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\ReservationBookingNoticeHandler.java----71----.map(p -> p.toModel()).collect(Collectors.toList());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----473----propertyRooms.add(propertyRoom.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----512----RoomStatus roomStatus = propertyRoomStatus.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----640----metrics.setHousekeepingStatuses(roomConditionMap.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomHandler.java----641----metrics.setInventoryStatuses(occupancyStatusMap.toModel());
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomInventoryStatusHandler.java----20----return domain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\handler\RoomTypeHandler.java----34----public RoomType toModel(RoomTypeDomain roomTypeDomain) { return roomTypeDomain.toModel(); }
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\MaintenanceImpl.java----94----return jobDetail.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\MaintenanceImpl.java----101----return jobDetail.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\MaintenanceImpl.java----108----return jobDetail.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\MaintenanceImpl.java----115----return jobDetail.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\MaintenanceImpl.java----122----return JobDetail.toModel(jobDetails);
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----583----LostAndFoundItem<?, ?> lostAndFoundItem = lostAndFoundItemDomain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----758----LocationDetails locationDetails = locationDetailsDomain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\service\manager\LostAndFoundItemManager.java----929----LocationDetails locationDetails = locationDetailsDomain.toModel();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\AllocationCountOperation.java----54----Map<String, AvailabilityMatrix> buildingMatrix = context.getNonBeddedAvailabilityMatrixByBuilding();
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\CalculateOperation.java----22----if (context.isIncludeNonBeddedRoomType() && null != context.getNonBeddedAvailabilityMatrixByBuilding()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\CalculateOperation.java----23----context.getNonBeddedAvailabilityMatrixByBuilding()
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----92----if (context.isIncludeNonBeddedRoomType() && null != context.getNonBeddedAvailabilityMatrixByBuilding()) {
C:\Harish\BundleVersions\70033\propertyservice\ServiceImplementation\src\main\java\com\agilysys\pms\property\availability\operation\RoomCountOperation.java----93----context.getNonBeddedAvailabilityMatrixByBuilding().forEach((buildingId, matrix) -> {
